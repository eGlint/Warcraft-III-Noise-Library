
/*
    Octave Perlin Wurst v1.0.0 

    A plugin for the Noise library.

    Port by Glint
    Octave Perlin by Flafla2, https://flafla2.github.io/2014/08/09/perlinnoise.html
*/

package OctavePerlin

import NoWurst
import Noise
import Vectors

public function octavePerlin(real x, int octaves, real persistence)  returns real
    var total = 0. 
    var frequency = 1.
    var amplitude = 1. 
    var maxValue = 0. 
    for i = 0 to octaves - 1 
        total = Noise.perlin(x * frequency) * amplitude
        maxValue += amplitude
        amplitude *= persistence
        frequency *= 2
    return total / maxValue

public function octavePerlin (vec2 vec, int octaves, real persistence) returns real
    var total = 0. 
    var frequency = 1.
    var amplitude = 1. 
    var maxValue = 0. 
    for i = 0 to octaves - 1 
        total = Noise.perlin(vec * frequency) * amplitude
        maxValue += amplitude
        amplitude *= persistence
        frequency *= 2
    return total / maxValue

public function octavePerlin (vec3 vec, int octaves, real persistence) returns real
    var total = 0. 
    var frequency = 1.
    var amplitude = 1. 
    var maxValue = 0. 
    for i = 0 to octaves - 1 
        total = Noise.perlin(vec * frequency) * amplitude
        maxValue += amplitude
        amplitude *= persistence
        frequency *= 2
    return total / maxValue
